<project name="IndexingBug" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.mps.config.path" location="${build.dir}/config" />
  <property name="build.mps.system.path" location="${build.dir}/system" />
  <property name="build.tmp" location="${build.dir}/tmp/IndexingBug" />
  <property name="build.layout" location="${build.dir}/artifacts/IndexingBug" />
  <property name="mps_home" location="" />
  <property name="artifacts.mps" location="${mps_home}" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mps.runtimeBuild" value="${import.mps.mps.runtimeBuild}" />
  <property name="mpsBootstrapCore.version.major" value="${import.mps.mpsBootstrapCore.version.major}" />
  <property name="mpsBootstrapCore.version.minor" value="${import.mps.mpsBootstrapCore.version.minor}" />
  <property name="mpsBootstrapCore.version.bugfixNr" value="${import.mps.mpsBootstrapCore.version.bugfixNr}" />
  <property name="mpsBootstrapCore.version.eap" value="${import.mps.mpsBootstrapCore.version.eap}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  <property name="mps.ant.log" value="warn" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <fileset dir="${artifacts.mps}/lib">
      <include name="util-8.jar" />
    </fileset>
  </path>
  
  <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  
  <generator-settings id="m2m-defaults" strictMode="true" parallelThreads="8" inplaceTransform="false" warnWrongChild="true" createStaticRefs="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}" />
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/tests.jar" />
    <mkdir dir="${build.tmp}/default/tests.jar/META-INF" />
    <echoxml file="${build.tmp}/default/tests.jar/META-INF/module.xml">
      <module namespace="tests" type="solution" uuid="9bcc5095-dd2f-4135-8f3e-7e1b4d48de5a">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="49808fad-9d41-4b96-83fa-9231640f6b2b(JUnit)" kind="rt" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" kind="rt" />
          <module ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" kind="rt" />
          <module ref="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" kind="rt" />
          <module ref="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
          <module ref="6ef0db41-d3b2-47fe-82ac-d55a42cb6b13(jetbrains.mps.baseLanguage.unitTest.runtime)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" kind="rt" />
          <module ref="e55e6749-03cb-4ea7-9695-2322bab791c1(jetbrains.mps.lang.test.matcher)" kind="rt" />
          <module ref="707c4fde-f79a-44b5-b3d7-b5cef8844ccf(jetbrains.mps.lang.test.runtime)" kind="rt" />
          <module ref="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" kind="rt" />
          <module ref="63b449db-0918-4a4a-a891-2c430ab133e4(org.junit.junit5)" kind="rt" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" kind="cl" />
          <module ref="f3061a53-9226-4cc5-a443-f952ceaf5816(jetbrains.mps.baseLanguage)" kind="cl" />
          <module ref="bfbdd672-7ff5-403f-af4f-16da5226f34c(jetbrains.mps.findUsages.runtime)" kind="cl" />
          <module ref="936d0043-b2fd-44c6-b9f3-9fbf7023c770(sandbox)" kind="cl" />
        </dependencies>
        <uses>
          <language id="l:f61473f9-130f-42f6-b98d-6c438812c2f6:jetbrains.mps.baseLanguage.unitTest" />
          <language id="l:7866978e-a0f0-4cc7-81bc-4d213d9375e1:jetbrains.mps.lang.smodel" />
          <language id="l:8585453e-6bfb-4d80-98de-b16074f1d86c:jetbrains.mps.lang.test" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="tests-src.jar" descriptor="tests.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/tests.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/tests" />
      <fileset dir="${basedir}/solutions/tests/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/tests.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-tests-models">
      <fileset dir="${basedir}/solutions/tests/models" includes="**/*.mps, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/tests-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/solutions/tests/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/solutions/tests/tests.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-tests-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/sandbox.jar" />
    <mkdir dir="${build.tmp}/default/sandbox.jar/META-INF" />
    <echoxml file="${build.tmp}/default/sandbox.jar/META-INF/module.xml">
      <module namespace="sandbox" type="solution" uuid="936d0043-b2fd-44c6-b9f3-9fbf7023c770">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
        </dependencies>
        <uses>
          <language id="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="sandbox-src.jar" descriptor="sandbox.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/sandbox.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/sandbox" />
      <fileset dir="${basedir}/solutions/sandbox/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/sandbox.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-sandbox-models">
      <fileset dir="${basedir}/solutions/sandbox/models" includes="**/*.mps, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/sandbox-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/solutions/sandbox/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/solutions/sandbox/sandbox.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-sandbox-models" prefix="module/models" />
    </jar>
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mps.runtimeBuild=${mps.runtimeBuild}${line.separator}mpsBootstrapCore.version.major=${mpsBootstrapCore.version.major}${line.separator}mpsBootstrapCore.version.minor=${mpsBootstrapCore.version.minor}${line.separator}mpsBootstrapCore.version.bugfixNr=${mpsBootstrapCore.version.bugfixNr}${line.separator}mpsBootstrapCore.version.eap=${mpsBootstrapCore.version.eap}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.mps.config.path}" />
    <delete dir="${build.mps.system.path}" />
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.sandbox, java.compile.tests" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes, module-tests" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate fork="true" logLevel="${mps.ant.log}">      
      <settings refid="m2m-defaults" />
      <plugin path="${artifacts.mps}/plugins/mps-core" id="jetbrains.mps.core" />
      <plugin path="${artifacts.mps}/plugins/mps-junit5" id="jetbrains.mps.junit5" />
      <plugin path="${artifacts.mps}/plugins/mps-testing" id="jetbrains.mps.testing" />
      <chunk>
        <module file="${basedir}/solutions/sandbox/sandbox.msd" />
        <module file="${basedir}/solutions/tests/tests.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
        <arg value="--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED" />
      </jvmargs>
      <macro name="mps_home" path="${mps_home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks" />
  
  <target name="makeDependents" />
  
  <target name="module-tests" depends="assemble, test.tests" />
  
  <target name="java.compile.sandbox" depends="fetchDependencies">
    <mkdir dir="${basedir}/solutions/sandbox/source_gen" />
    <mkdir dir="${build.tmp}/java/out/sandbox" />
    <javac destdir="${build.tmp}/java/out/sandbox" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/solutions/sandbox/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-references.jar" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/sandbox">
      <fileset dir="${basedir}/solutions/sandbox/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.tests" depends="java.compile.sandbox, fetchDependencies">
    <mkdir dir="${basedir}/solutions/tests/source_gen" />
    <mkdir dir="${build.tmp}/java/out/tests" />
    <javac destdir="${build.tmp}/java/out/tests" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/solutions/tests/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-references.jar" />
        <pathelement path="${build.tmp}/java/out/sandbox" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-context.jar" />
        <fileset file="${artifacts.mps}/lib/mps-constraints-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mps}/lib/mps-persistence.jar" />
        <fileset file="${artifacts.mps}/lib/mps-generator.jar" />
        <fileset file="${artifacts.mps}/lib/mps-project-check.jar" />
        <fileset file="${artifacts.mps}/lib/mps-test.jar" />
        <fileset file="${artifacts.mps}/lib/ant/lib/ant.jar" />
        <fileset file="${artifacts.mps}/lib/junit4.jar" />
        <fileset file="${artifacts.mps}/lib/app.jar" />
        <fileset file="${artifacts.mps}/lib/app-client.jar" />
        <fileset file="${artifacts.mps}/lib/lib.jar" />
        <fileset file="${artifacts.mps}/lib/lib-client.jar" />
        <fileset file="${artifacts.mps}/lib/util.jar" />
        <fileset file="${artifacts.mps}/lib/util_rt.jar" />
        <fileset file="${artifacts.mps}/lib/util-8.jar" />
        <fileset file="${artifacts.mps}/lib/forms_rt.jar" />
        <fileset file="${artifacts.mps}/lib/java-frontback.jar" />
        <fileset file="${artifacts.mps}/lib/java-impl.jar" />
        <fileset file="${artifacts.mps}/lib/jps-model.jar" />
        <fileset file="${artifacts.mps}/lib/testFramework.jar" />
        <fileset file="${artifacts.mps}/lib/stats.jar" />
        <fileset file="${artifacts.mps}/lib/platform-loader.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/trove.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.matcher.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="apiguardian-api-1.1.2.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-api-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-engine-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-migrationsupport-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-params-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-commons-1.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-engine-1.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-launcher-1.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-vintage-engine-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="opentest4j-1.2.0.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-reporting-1.9.3.jar" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/tests">
      <fileset dir="${basedir}/solutions/tests/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="test.tests" depends="assemble">
    <path location="${build.layout}/tests.jar" id="mps.tests.path" />
    <pathconvert property="mps.tests.path.string" refid="mps.tests.path" />
    <property name="build.jna.library.path" location="${artifacts.mps}/lib/jna" />
    <launchtests fork="true" haltonfailure="true" mpshome="${artifacts.mps}" reports="." opentest="true">      
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xss2048k" />
        <arg value="-Xmx1024m" />
        <arg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <arg value="-Didea.config.path=${build.mps.config.path}" />
        <arg value="-Didea.system.path=${build.mps.system.path}" />
        <arg value="-Dintellij.platform.load.app.info.from.resources=true" />
        <arg value="-Djna.boot.library.path=${build.jna.library.path}" />
      </jvmargs>
      
      
      <library file="${build.layout}/sandbox.jar" />
      
      <plugin id="jetbrains.mps.core" path="${artifacts.mps}/plugins/mps-core" />
      <plugin id="jetbrains.mps.junit5" path="${artifacts.mps}/plugins/mps-junit5" />
      <plugin id="jetbrains.mps.testing" path="${artifacts.mps}/plugins/mps-testing" />
      <project path="${basedir}" />
      <testmodules>        
        <path refid="mps.tests.path" />
      </testmodules>
    </launchtests>
    <move todir=".">      
      <fileset dir=".">
        <include name="TEST-junit-jupiter.xml" />
        <include name="TEST-junit-vintage.xml" />
      </fileset>
      <globmapper from="*.xml" to="*-IndexingBug.xml" />
    </move>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/solutions/sandbox/source_gen" />
    <delete dir="${basedir}/solutions/tests/source_gen" />
  </target>
</project>